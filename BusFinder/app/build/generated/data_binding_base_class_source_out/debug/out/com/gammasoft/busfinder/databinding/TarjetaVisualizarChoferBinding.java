// Generated by view binder compiler. Do not edit!
package com.gammasoft.busfinder.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.RatingBar;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.gammasoft.busfinder.R;
import io.alterac.blurkit.BlurLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TarjetaVisualizarChoferBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final BlurLayout blurLayout;

  @NonNull
  public final ImageButton btnBorrar;

  @NonNull
  public final ImageButton btnModificar;

  @NonNull
  public final View dragArea;

  @NonNull
  public final ImageView dragHandleImage;

  @NonNull
  public final TextView etqCalificacion;

  @NonNull
  public final TextView etqCelular;

  @NonNull
  public final TextView etqLinea;

  @NonNull
  public final TextView etqNombre;

  @NonNull
  public final TextView etqRFC;

  @NonNull
  public final CardView tarjeta;

  @NonNull
  public final RatingBar txtCalificacion;

  @NonNull
  public final TextView txtCelular;

  @NonNull
  public final TextView txtLinea;

  @NonNull
  public final TextView txtNombre;

  @NonNull
  public final TextView txtRFC;

  @NonNull
  public final RelativeLayout visualizarChofer;

  private TarjetaVisualizarChoferBinding(@NonNull RelativeLayout rootView,
      @NonNull BlurLayout blurLayout, @NonNull ImageButton btnBorrar,
      @NonNull ImageButton btnModificar, @NonNull View dragArea, @NonNull ImageView dragHandleImage,
      @NonNull TextView etqCalificacion, @NonNull TextView etqCelular, @NonNull TextView etqLinea,
      @NonNull TextView etqNombre, @NonNull TextView etqRFC, @NonNull CardView tarjeta,
      @NonNull RatingBar txtCalificacion, @NonNull TextView txtCelular, @NonNull TextView txtLinea,
      @NonNull TextView txtNombre, @NonNull TextView txtRFC,
      @NonNull RelativeLayout visualizarChofer) {
    this.rootView = rootView;
    this.blurLayout = blurLayout;
    this.btnBorrar = btnBorrar;
    this.btnModificar = btnModificar;
    this.dragArea = dragArea;
    this.dragHandleImage = dragHandleImage;
    this.etqCalificacion = etqCalificacion;
    this.etqCelular = etqCelular;
    this.etqLinea = etqLinea;
    this.etqNombre = etqNombre;
    this.etqRFC = etqRFC;
    this.tarjeta = tarjeta;
    this.txtCalificacion = txtCalificacion;
    this.txtCelular = txtCelular;
    this.txtLinea = txtLinea;
    this.txtNombre = txtNombre;
    this.txtRFC = txtRFC;
    this.visualizarChofer = visualizarChofer;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TarjetaVisualizarChoferBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TarjetaVisualizarChoferBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.tarjeta_visualizar_chofer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TarjetaVisualizarChoferBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.blurLayout;
      BlurLayout blurLayout = ViewBindings.findChildViewById(rootView, id);
      if (blurLayout == null) {
        break missingId;
      }

      id = R.id.btnBorrar;
      ImageButton btnBorrar = ViewBindings.findChildViewById(rootView, id);
      if (btnBorrar == null) {
        break missingId;
      }

      id = R.id.btnModificar;
      ImageButton btnModificar = ViewBindings.findChildViewById(rootView, id);
      if (btnModificar == null) {
        break missingId;
      }

      id = R.id.dragArea;
      View dragArea = ViewBindings.findChildViewById(rootView, id);
      if (dragArea == null) {
        break missingId;
      }

      id = R.id.dragHandleImage;
      ImageView dragHandleImage = ViewBindings.findChildViewById(rootView, id);
      if (dragHandleImage == null) {
        break missingId;
      }

      id = R.id.etqCalificacion;
      TextView etqCalificacion = ViewBindings.findChildViewById(rootView, id);
      if (etqCalificacion == null) {
        break missingId;
      }

      id = R.id.etqCelular;
      TextView etqCelular = ViewBindings.findChildViewById(rootView, id);
      if (etqCelular == null) {
        break missingId;
      }

      id = R.id.etqLinea;
      TextView etqLinea = ViewBindings.findChildViewById(rootView, id);
      if (etqLinea == null) {
        break missingId;
      }

      id = R.id.etqNombre;
      TextView etqNombre = ViewBindings.findChildViewById(rootView, id);
      if (etqNombre == null) {
        break missingId;
      }

      id = R.id.etqRFC;
      TextView etqRFC = ViewBindings.findChildViewById(rootView, id);
      if (etqRFC == null) {
        break missingId;
      }

      id = R.id.tarjeta;
      CardView tarjeta = ViewBindings.findChildViewById(rootView, id);
      if (tarjeta == null) {
        break missingId;
      }

      id = R.id.txtCalificacion;
      RatingBar txtCalificacion = ViewBindings.findChildViewById(rootView, id);
      if (txtCalificacion == null) {
        break missingId;
      }

      id = R.id.txtCelular;
      TextView txtCelular = ViewBindings.findChildViewById(rootView, id);
      if (txtCelular == null) {
        break missingId;
      }

      id = R.id.txtLinea;
      TextView txtLinea = ViewBindings.findChildViewById(rootView, id);
      if (txtLinea == null) {
        break missingId;
      }

      id = R.id.txtNombre;
      TextView txtNombre = ViewBindings.findChildViewById(rootView, id);
      if (txtNombre == null) {
        break missingId;
      }

      id = R.id.txtRFC;
      TextView txtRFC = ViewBindings.findChildViewById(rootView, id);
      if (txtRFC == null) {
        break missingId;
      }

      RelativeLayout visualizarChofer = (RelativeLayout) rootView;

      return new TarjetaVisualizarChoferBinding((RelativeLayout) rootView, blurLayout, btnBorrar,
          btnModificar, dragArea, dragHandleImage, etqCalificacion, etqCelular, etqLinea, etqNombre,
          etqRFC, tarjeta, txtCalificacion, txtCelular, txtLinea, txtNombre, txtRFC,
          visualizarChofer);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
